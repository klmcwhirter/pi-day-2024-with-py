#*----------------------------------------------------------------------
#* pythonbuild
#*----------------------------------------------------------------------

FROM docker.io/library/python:3.12.3-alpine as pythonbuild
ARG ENABLE_TESTS
ARG PI_DIGITS_FILE=/app/src/pi_digits_seed.zig
WORKDIR /app
COPY . /app

RUN apk upgrade && \
    ENABLE_TESTS=$ENABLE_TESTS PI_DIGITS_FILE=$PI_DIGITS_FILE ./etc/gen_run_pytests.sh

#*----------------------------------------------------------------------
#* zigbuild
#*----------------------------------------------------------------------
FROM docker.io/library/alpine as zigbuild
ARG ENABLE_TESTS
ARG PI_DIGITS_FILE=/app/src/pi_digits_seed.zig
WORKDIR /app
COPY ./etc /app/etc
COPY pi-zig /app
COPY --from=pythonbuild $PI_DIGITS_FILE $PI_DIGITS_FILE

# RUN ZIGVER=0.11.0 && ZIGARCH=zig-linux-x86_64-$ZIGVER.tar.xz && ZIGBIN=zig-bin && \

RUN ZIGVER=0.13.0 && ZIGARCH=zig-linux-x86_64-$ZIGVER.tar.xz && ZIGBIN=zig-bin && \
    apk upgrade && \
    apk add binaryen && \
    wget -O $ZIGARCH https://ziglang.org/download/$ZIGVER/$ZIGARCH && \
    tar xf $ZIGARCH && \
    ENABLE_TESTS=$ENABLE_TESTS PI_DIGITS_FILE=$PI_DIGITS_FILE ZIGARCH=$ZIGARCH ZIGBIN=$ZIGBIN ./etc/build_run_zig_tests.sh && \
    wasm-dis zig-out/bin/pi-zig.wasm -o zig-out/bin/pi-zig.wat

#*----------------------------------------------------------------------
#* build
#*----------------------------------------------------------------------

FROM docker.io/library/node:20-alpine as build

RUN apk upgrade

# ENV TZ=PST8PDT set in docker-compose.yml

WORKDIR /app
COPY . /app
COPY --from=zigbuild /app/zig-build.* .
COPY --from=zigbuild /app/zig-tests.* .
# used for integration testing pi-zig.wasm: execute `node public/pi-zig.cjs` in the container
COPY --from=zigbuild /app/zig-out/bin/pi-zig.cjs ./public/pi-zig.cjs
COPY --from=zigbuild /app/zig-out/bin/pi-zig.wasm ./public/pi-zig.wasm
COPY --from=zigbuild /app/zig-out/bin/pi-zig.wat ./public/pi-zig.wat

COPY --from=pythonbuild /app/piadapter.tgz ./public/piadapter.tgz
COPY --from=pythonbuild /app/python-tests.* .

RUN npm install && \
    WASM_LANG=zig etc/clean_final.sh && \
    rm -fr etc/

## Until I can work through the pyodide build issues ...
EXPOSE 3000
CMD ["npm", "start"]


# RUN npm install && npm run build


#*----------------------------------------------------------------------
#* final
#*----------------------------------------------------------------------

# FROM nginx:mainline-alpine
# RUN apk upgrade --no-cache

# COPY --from=build /app/dist /usr/share/nginx/html
