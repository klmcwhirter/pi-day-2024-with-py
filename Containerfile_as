#*----------------------------------------------------------------------
#* pythonbuild
#*----------------------------------------------------------------------

FROM docker.io/library/python:3.12.3-alpine as pythonbuild
ARG ENABLE_TESTS
ARG PI_DIGITS_FILE=/app/assembly/pi_digits_seed.ts
WORKDIR /app
COPY . /app

RUN apk update && apk upgrade && \
    ENABLE_TESTS=$ENABLE_TESTS PI_DIGITS_FILE=$PI_DIGITS_FILE ./etc/gen_run_pytests.sh

#*----------------------------------------------------------------------
#* asbuild
#*----------------------------------------------------------------------
FROM docker.io/library/node:22-alpine as asbuild
ARG ENABLE_TESTS
ARG PI_DIGITS_FILE=/app/assembly/pi_digits_seed.ts

WORKDIR /app
COPY ./etc /app/etc
COPY pi-as /app
COPY --from=pythonbuild $PI_DIGITS_FILE $PI_DIGITS_FILE

RUN apk update && apk upgrade && \
    ENABLE_TESTS=$ENABLE_TESTS PI_DIGITS_FILE=$PI_DIGITS_FILE ./etc/build_run_as_tests.sh

#*----------------------------------------------------------------------
#* build
#*----------------------------------------------------------------------

FROM docker.io/library/node:22-alpine as build
ARG ENABLE_TESTS

# ENV TZ=PST8PDT set in docker-compose.yml

WORKDIR /app
COPY . /app
COPY --from=asbuild /app/as-*.* .

# used for integration testing pi-as.wasm: execute `node ./src/pi/pi-as-tester.js` in the container
COPY --from=asbuild /app/pi-as-tester.js ./src/pi/pi-as-tester.js
COPY --from=asbuild /app/build/pi-as.js ./src/pi/pi-as.js
COPY --from=asbuild /app/build/pi-as.wasm* ./src/pi/

COPY --from=pythonbuild /app/piadapter.tgz ./public/piadapter.tgz
COPY --from=pythonbuild /app/python-*.* .

RUN apk update && apk upgrade && \
npm install && \
    WASM_LANG=as etc/clean_final.sh && \
    rm -fr etc/

## Until I can work through the pyodide build issues ...
EXPOSE 3000
CMD ["npm", "start"]


# RUN npm install && npm run build


#*----------------------------------------------------------------------
#* final
#*----------------------------------------------------------------------

# FROM nginx:mainline-alpine
# RUN apk upgrade --no-cache

# COPY --from=build /app/dist /usr/share/nginx/html
